{"name":"Wp-vagrant","tagline":"A simple but powerful Vagrant setup for WordPress development","body":"# Vagrant Box with Ubuntu 14.04, Nginx, MySQL and PHP-FPM\r\n\r\nA Vagrant setup to create an Ubuntu 14.04 (Trusty) virtual machine with Nginx, MySQL and PHP for WordPress development.\r\n\r\nIntended to be as simple as possible - just drop into existing WP folder, modify , add a database dump, and within minutes, you should be able to browse to nginx.local and see your site.\r\n\r\n* Loads specified database dump as part of provisioning\r\n* Renames all domain references using [WP-CLI](wp-cli.org)\r\n* Dumps the database to the shared folder on `vagrant destroy` â€” (this needs the [vagrant triggers plugin](https://github.com/emyl/vagrant-triggers) to be installed from [(https://github.com/emyl/vagrant-triggers)](https://github.com/emyl/vagrant-triggers))\r\n* Remote debugging using XDebug\r\n\r\n## Acknowledgements\r\n\r\nThis Vagrant box and provisioning is based on [this basebox from Paul Herron](https://github.com/paulherron/vagrant_precise32_nginx_mysql_php-fpm) and the [accompanying blog post](http://paulherron.com/blog/making_your_own_vagrant_wordpress_box/).\r\n\r\n## What's included in the VM?\r\n\r\n* Ubuntu 14.04 LTS (Trusty Tahir)\r\n* Nginx, listening on port 80 and on 443 using a dummy, self-signed certificate\r\n* MySQL, listening for remote connections so you can access it from your host machine, for example using [SequelPro](http://www.sequelpro.com/)\r\n* PHP-FPM\r\n* PHP 5.5, with OpCache and XDebug\r\n* [Byobu](http://byobu.co/)\r\n* [WP-CLI](wp-cli.org)\r\n* Dump database automatically on `vagrant destroy`\r\n\r\n\r\n## Instructions\r\n\r\nThese instructions are OS X specific, but the overall solution should work on any platform that Vagrant and VirtualBox support.\r\n\r\n* Install VirtualBox\r\n* Install Vagrant\r\n* Install Vagrant triggers (vagrant plugin install vagrant-triggers)\r\n* Install vagrant-hostupdater (vagrant plugin install vagrant-hostsupdater)\r\n* Clone this repository:  `git clone git@bitbucket.org:digitalquery/vagrant-nginx.git`\r\n\t* Or download an archive of the files here:   [https://bitbucket.org/digitalquery/vagrant-nginx/get/master.tar.gz](https://bitbucket.org/digitalquery/vagrant-nginx/get/master.tar.gz), and then `tar zxvf master.tar.gz`\r\n\t* The rest of these instructions assume you have a folder `/Downloads/vagrant-wp/` that contains the unzipped / cloned files, and the WP folder in question is `~/Sites/wptest/`\r\n* Copy the Vagrantfile from the zip file or the clone folder to the root folder of the site you want to test - for a normal WP install, this is the main WP folder (ie where your wp-config.php is): `cp /Downloads/vagrant-wp/Vagrantfile ~/Sites/wptest`\r\n* copy the provisioning folder and subfolders: `cp -r /Downloads/vagrant-wp/Vagrantfile/provisioning ~/Sites/wptest`\r\n* if you want a database dump to be loaded into MySQL, then put a database dump into the provisioning folder\r\n* edit `~/Sites/provisioning/`:\r\n\t* mysql_root_password='root'# your mysql root password\r\n\t* import_database=true # if import_database is true, then we'll try to import the database dump into the vagrant mysql\r\n\t* wp_db_name = \"\" # the database name (should be the same as in wp-config.php)\r\n\t* wp_db_user='' # database user (should be the same as in wp-config.php)\r\n\t* wp_db_password ='' # db password (should be the same as in wp-config.php)\r\n\t* wp_db_dump_file='' # the name of the dump file, relative to the provisioning folder. So, if your db dump file is provisioning/wp_db.sql, wp_db_dump_file='wp_db.sql'\r\n\t* import_site_domain='' # the domain you've been using for local development. The provisioning process will use wp-cli to safely replace this with `nginx.local`\r\n\t* wordpress_path='' # normally /vagrant. If you've installed WP into a subdirectory, then put the path here, eg '/vagrant/blog'\r\n* And now you can run `vagrant up`. The provisioning scripts should start working and between 2 - 10 minutes later, you should be able to browse to nginx.local and see your site running.\r\n","google":"UA-56497-2","note":"Don't delete this file! It's used internally to help with page regeneration."}