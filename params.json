{"name":"WP-Vagrant","tagline":"A simple but powerful Vagrant setup for WordPress development","body":"# Vagrant Box with Ubuntu 14.04, Nginx, MySQL and PHP-FPM\r\n\r\nA Vagrant setup to create an Ubuntu 14.04 (Trusty) virtual machine with Nginx, MySQL and PHP for WordPress development.\r\n\r\nIntended to be as simple as possible:\r\n\r\n\r\n#### Summary\r\n\r\n* Quickly create a fresh WP instance served up via the Vagrant server.\r\n* Optionally specify which version of WP to install\r\n* Can be dropped into an existing WP directory to provide a LEMP testing and development server with minimal config changes\r\n* Can loads database dump as part of provisioning\r\n* Renames al l domain references using [WP-CLI](wp-cli.org)\r\n* Dumps the database to the shared folder on `vagrant destroy` â€” (this needs the [vagrant triggers plugin](https://github.com/emyl/vagrant-triggers) to be installed from [(https://github.com/emyl/vagrant-triggers)](https://github.com/emyl/vagrant-triggers))\r\n* Remote debugging using XDebug\r\n\r\n## Acknowledgements\r\n\r\nThis Vagrant box and provisioning is based on [this box from Paul Herron](https://github.com/paulherron/vagrant_precise32_nginx_mysql_php-fpm) and the [accompanying blog post](http://paulherron.com/blog/making_your_own_vagrant_wordpress_box/).\r\n\r\n## What's included in the VM?\r\n\r\n* Ubuntu 14.04 LTS (Trusty Tahir)\r\n* Nginx, listening on port 80\r\n* MySQL, listening for remote connections so you can access it from your host machine, for example using [SequelPro](http://www.sequelpro.com/)\r\n* PHP-FPM\r\n* PHP 5.5, with OpCache and XDebug\r\n* [Byobu](http://byobu.co/)\r\n* [WP-CLI](wp-cli.org)\r\n* Dump database automatically on `vagrant destroy`\r\n\r\n\r\n## Instructions\r\n\r\nThese instructions are OS X specific, but the overall solution should work on any platform that Vagrant and VirtualBox support.\r\n\r\n### Before you start\r\n\r\n* Install [Homebrew (http://brew.sh/)](http://brew.sh/)\r\n* If you want to install VirtualBox and Vagrant with Homebrew then install brew-cask:\r\n\t* `brew tap caskroom/cask`\r\n\t* `brew install brew-cask`\r\n\r\n* Install VirtualBox\r\n\t* Either download from the [VirtualBox site (https://www.virtualbox.org/wiki/Downloads)](https://www.virtualbox.org/wiki/Downloads)\r\n\t* Or, install via homebrew `brew cask install virtualbox`\r\n\r\n* Install Vagrant\r\n\t* Either download from the [Vagrant site (https://www.vagrantup.com/downloads.html)](https://www.vagrantup.com/downloads.html)\r\n\t* Or, install via homebrew `brew cask install vagrant`\r\n\r\n* Install Vagrant triggers `vagrant plugin install vagrant-triggers`\r\n* Install vagrant-hostupdater `vagrant plugin install vagrant-hostsupdater`\r\n\r\n\r\n\r\n### Fresh WP install\r\n\r\nUse these instructions if you want to create a new WP site with the default empty database.\r\n\r\n1. Create directory for the site:\r\n\t* `mkdir testsite`\r\n1. `cd` to this created directory\r\n1.  Clone the wp-vagrant folder here\r\n\t* `git clone git@github.com:digitalquery/wp-vagrant.git`\r\n1. Copy the VagrantFile into the site root directory\r\n\t* `cp wp-vagrant/Vagrantfile .`\r\n1. Fire up Vagrant to create the VM and then run the provisioning scripts\r\n\t* `vagrant up`\r\n\t* This may take a little while as the provisioning scripts download and install everything\r\n1. Browse to `http://nginx.local` - you should see the default twentyfourteen theme\r\n\r\n\r\n### Existing WP install\r\n\r\nUse these intructions if you have an existing WP install\r\n\r\n1. Go to the folder\r\n1. Clone the wp-vagrant repo\r\n\t* `git clone git@github.com:digitalquery/wp-vagrant.git`\r\n\t* This creates a subfolder called `wp-vagrant`\r\n1. Copy the VagrantFile into the site root directory\r\n\t* `cp wp-vagrant/Vagrantfile .`\r\n1. If you want to import a database during the provisioning, then put a SQL dump file into the `wp-vagrant` folder\r\n1. Using your editor of choice, edit `wp-vagrant/settings.sh`\r\n\t* `install_wordpress=false `\r\n\t\t* the default for this is true, so change to false\r\n\t* `wp_db_name=<db_name>`\r\n\t\t* should be the same database name as in wp-config.php\r\n\t* `wp_db_user` and `wp_db_password`\r\n\t\t* If the wp-config file uses something different than root and the `mysql_root_password` then change these\r\n\t\t* Otherwise leave blank\r\n\t* Leave the WP admin section variables empty\r\n\t* `import_database=true`\r\n\t\t* set to true if you want to import a database ( and have a SQL dump file in the wp-vagrant folder)\r\n\t* `wp_db_dump_file=''`\r\n\t \t* this should be the name of the db dump file\r\n\t* `import_site_domain=''`\r\n\t\t* Put the domain that you were using, this should be the same domain as the database dump.\r\n\t\t* We will search for this domain in the database and change it to `nginx.local`\r\n1. `vagrant up`\r\n1. Browse to `http://nginx.local` - and you should see your site up and running\r\n\r\n\r\n### Settings.sh\r\n\r\nThe full list. \r\n\r\n##### Basic Settings\r\n\r\n* `install_wordpress=true`\r\n* `wp_version=\"\"`\r\n* `wp_path='/vagrant'`\r\n* `mysql_root_password='root'`\r\n\r\n##### WP database credentials\r\n* `wp_db_name='vagrant_test'`\r\n* `wp_db_user=''`\r\n* `wp_db_password=''`\r\n\r\n##### WP admin and site setup details\r\n* `wp_admin_user='admin'`\r\n* `wp_admin_password='123'`\r\n* `wp_admin_email='root@example.com'`\r\n* `wp_site_title='Vagrant'`\r\n\r\n##### Database import\r\n* `import_database=false`\r\n* `wp_db_dump_file=''`\r\n* `import_site_domain=''`\r\n","google":"UA-56497-2","note":"Don't delete this file! It's used internally to help with page regeneration."}